# Generated by Django 4.1 on 2022-08-28 14:20

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Cabinet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Наименование")),
                (
                    "abbreviation",
                    models.CharField(
                        max_length=30, verbose_name="Оперативное наименование"
                    ),
                ),
                (
                    "manufacturer",
                    models.CharField(max_length=200, verbose_name="Изготовитель"),
                ),
                (
                    "series",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Серия изделия",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Тип изделия",
                    ),
                ),
                (
                    "release_year",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1972),
                            django.core.validators.MaxValueValidator(2050),
                        ],
                        verbose_name="Год выпуска",
                    ),
                ),
                (
                    "launch_year",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1972),
                            django.core.validators.MaxValueValidator(2050),
                        ],
                        verbose_name="Год ввода в эксплуатацию",
                    ),
                ),
            ],
            options={
                "verbose_name": "Шкаф/панель",
                "verbose_name_plural": "Шкафы/панели",
                "ordering": ("hardware", "abbreviation"),
            },
        ),
        migrations.CreateModel(
            name="ComponentDesign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="Исполнение"
                    ),
                ),
                (
                    "abbreviation",
                    models.CharField(
                        max_length=3, unique=True, verbose_name="Аббревиатура"
                    ),
                ),
            ],
            options={
                "verbose_name": "Вариант исполнения",
                "verbose_name_plural": "Варианты исполнения",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="ComponentFunction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=50,
                        unique=True,
                        verbose_name="Назначение комплектующего",
                    ),
                ),
            ],
            options={
                "verbose_name": "Назначение комплектующего",
                "verbose_name_plural": "Назначения комплектующих",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="ComponentRepairMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200,
                        unique=True,
                        verbose_name="Метод устранения дефекта",
                    ),
                ),
            ],
            options={
                "verbose_name": "Метод устранения дефекта",
                "verbose_name_plural": "Методы устранения дефектов",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Connection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Наименование")),
                (
                    "abbreviation",
                    models.CharField(max_length=30, verbose_name="Аббревиатура"),
                ),
            ],
            options={
                "verbose_name": "Присоединение",
                "verbose_name_plural": "Присоединения",
                "ordering": ("facility", "abbreviation"),
            },
        ),
        migrations.CreateModel(
            name="Facility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200, unique=True, verbose_name="Наименование"
                    ),
                ),
                (
                    "abbreviation",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="Аббревиатура"
                    ),
                ),
            ],
            options={
                "verbose_name": "Объект диспетчеризации",
                "verbose_name_plural": "Объекты диспетчеризации",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Hardware",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Наименование")),
                (
                    "inventory_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Инв. номер"
                    ),
                ),
                (
                    "connection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="hardware",
                        to="hardware.connection",
                        verbose_name="Присоединение",
                    ),
                ),
            ],
            options={
                "verbose_name": "Оборудование",
                "verbose_name_plural": "Оборудование",
                "ordering": ("connection", "name"),
            },
        ),
        migrations.AddField(
            model_name="connection",
            name="facility",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="connections",
                to="hardware.facility",
                verbose_name="Объект диспетчеризации",
            ),
        ),
        migrations.CreateModel(
            name="Component",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Наименование")),
                (
                    "manufacturer",
                    models.CharField(max_length=200, verbose_name="Изготовитель"),
                ),
                (
                    "series",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Серия изделия",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Тип изделия",
                    ),
                ),
                (
                    "release_year",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1972),
                            django.core.validators.MaxValueValidator(2050),
                        ],
                        verbose_name="Год выпуска",
                    ),
                ),
                (
                    "launch_year",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1972),
                            django.core.validators.MaxValueValidator(2050),
                        ],
                        verbose_name="Год ввода в эксплуатацию",
                    ),
                ),
                (
                    "cabinet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="components",
                        to="hardware.cabinet",
                        verbose_name="Шкаф/Панель",
                    ),
                ),
                (
                    "component",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="components",
                        to="hardware.component",
                        verbose_name="Комплектующее",
                    ),
                ),
                (
                    "design",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="components",
                        to="hardware.componentdesign",
                        verbose_name="Исполнение",
                    ),
                ),
                (
                    "function",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="components",
                        to="hardware.componentfunction",
                        verbose_name="Назначение",
                    ),
                ),
                (
                    "repair_method",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="components",
                        to="hardware.componentrepairmethod",
                        verbose_name="Метод устранения дефекта",
                    ),
                ),
            ],
            options={
                "verbose_name": "Комплектующее изделие",
                "verbose_name_plural": "Комплектующие изделия",
                "ordering": ("name",),
            },
        ),
        migrations.AddField(
            model_name="cabinet",
            name="hardware",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="cabinets",
                to="hardware.hardware",
                verbose_name="Оборудование",
            ),
        ),
        migrations.AddConstraint(
            model_name="hardware",
            constraint=models.UniqueConstraint(
                fields=("name", "connection"), name="name_connection_uniquetogether"
            ),
        ),
        migrations.AddConstraint(
            model_name="connection",
            constraint=models.UniqueConstraint(
                fields=("name", "facility"), name="name_facility_uniquetogether"
            ),
        ),
        migrations.AddConstraint(
            model_name="connection",
            constraint=models.UniqueConstraint(
                fields=("abbreviation", "facility"),
                name="abbreviation_facility_uniquetogether",
            ),
        ),
        migrations.AddConstraint(
            model_name="cabinet",
            constraint=models.UniqueConstraint(
                fields=("abbreviation", "hardware"),
                name="abbreviation_hardware_uniquetogether",
            ),
        ),
    ]
