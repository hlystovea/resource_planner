name: Test Resource planner

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev ]

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DJANGO_SETTINGS_MODULE: "project.settings.test"
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 
      uses: actions/setup-python@v3
      with:
        python-version: 3.12
    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line
        pip install pytest-cov
        pip install -r requirements.txt
    - name: Run migrations
      run: python project/manage.py migrate
    - name: Test with flake8 and pytest
      run: |
        python -m flake8
        cd project
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage1.xml,./coverage2.xml,!./cache
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true

  send_message:
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: send telegram message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} completed successfully!
